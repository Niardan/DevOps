apiVersion: v1
kind: Secret
metadata:
  name: auth-basic
data:
  user1: dXNlcjE6JGFwcjEkQ3JGM0xoaXEkZUk4eEg1N0RCNGJMODRDanJ1S1QzLwo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  localhost;
          location / {
            auth_basic "Auth Area";
            auth_basic_user_file /etc/nginx/auth/user1; 
            root   /usr/share/nginx/html;
            index  index.html index.htm;
         }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf
  labels:
    app: nginx-sf
spec:
  selector:
    matchLabels:
      app: nginx-sf-pod
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx-sf-pod
    spec:
      containers:
      - name: nginx-sf-container
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-auth
          mountPath: /etc/nginx/auth
          readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-auth
        secret:
          secretName: auth-basic
---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  type: LoadBalancer
  selector:
    app: nginx-sf-pod
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
